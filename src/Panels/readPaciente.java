
package Panels;

import Database.pacienteCRUD;
import Entities.Paciente;
import Main.MainWindow;
import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class readPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form createPaciente
     */
    public readPaciente() {
        initComponents();
        cargarPacientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgSexo = new javax.swing.ButtonGroup();
        pomIzquierdo = new javax.swing.JPopupMenu();
        Modificar = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGuardarRegistro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaPacientes = new javax.swing.JTable();

        Modificar.setText("Modificar Registro Paciente");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });
        pomIzquierdo.add(Modificar);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setTitle("Pacientes");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Couture", 0, 16), new java.awt.Color(0, 170, 181))); // NOI18N

        jLabel3.setText("Paciente:");

        txtPaciente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPacienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPacienteFocusLost(evt);
            }
        });
        txtPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPacienteKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("(ingresa el nombre del paciente)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Couture", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 77, 79));
        jLabel2.setText("Lista de pacientes");

        btnGuardarRegistro.setText("Cerrar");
        btnGuardarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarRegistroActionPerformed(evt);
            }
        });

        tblListaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombres", "Apellidos", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaPacientes.setVerifyInputWhenFocusTarget(false);
        tblListaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaPacientesMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblListaPacientesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblListaPacientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnGuardarRegistro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarRegistroActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnGuardarRegistroActionPerformed

    private void txtPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPacienteKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar()) && !(evt.getKeyCode() == KeyEvent.VK_BACKSPACE)){
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPacienteKeyTyped

    private void txtPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPacienteFocusLost
        txtPaciente.setText(txtPaciente.getText().toUpperCase());
    }//GEN-LAST:event_txtPacienteFocusLost

    private void txtPacienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPacienteFocusGained
        txtPaciente.selectAll();
    }//GEN-LAST:event_txtPacienteFocusGained

    private void txtPacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPacienteKeyReleased
        cargarPacientes(txtPaciente.getText());
    }//GEN-LAST:event_txtPacienteKeyReleased

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel)tblListaPacientes.getModel();
        String clave = (String)modelo.getValueAt(tblListaPacientes.getSelectedRow(),0);
        System.out.println(clave);
        modificarPaciente(clave);
    }//GEN-LAST:event_ModificarActionPerformed

    private void tblListaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaPacientesMouseClicked
        if (evt.isPopupTrigger()){
            pomIzquierdo.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblListaPacientesMouseClicked

    private void tblListaPacientesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaPacientesMouseReleased
        if (evt.isPopupTrigger()){
            pomIzquierdo.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblListaPacientesMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Modificar;
    private javax.swing.ButtonGroup btgSexo;
    private javax.swing.JButton btnGuardarRegistro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu pomIzquierdo;
    private javax.swing.JTable tblListaPacientes;
    private javax.swing.JTextField txtPaciente;
    // End of variables declaration//GEN-END:variables

    private void cargarPacientes() {
        pacienteCRUD crud = new pacienteCRUD();
        ArrayList<Paciente> listaPacientes = crud.buscaPaciente(txtPaciente.getText());
        DefaultTableModel modelo = (DefaultTableModel)tblListaPacientes.getModel();
        listaPacientes.stream().forEach((listaPaciente) -> {
            Object[] datosFila = {
                listaPaciente.getCvePaciente(), 
                listaPaciente.getNombrePrimero() +" "+ listaPaciente.getNombreSegundo(), 
                listaPaciente.getPrimerApellido() +" "+ listaPaciente.getSegundoApellido(), 
                listaPaciente.getTelefono()
            };
            modelo.addRow(datosFila);
        });
    }
    private void cargarPacientes(String pac){
        pacienteCRUD crud = new pacienteCRUD();
        ArrayList<Paciente> listaPacientes = crud.buscaPaciente(pac);
        DefaultTableModel modelo = (DefaultTableModel)tblListaPacientes.getModel();
        for(int i = modelo.getRowCount() - 1; i >= 0; i--)
            modelo.removeRow(i);
        listaPacientes.stream().forEach((listaPaciente) -> {
            Object[] datosFila = {
                listaPaciente.getCvePaciente(), 
                listaPaciente.getNombrePrimero() +" "+ listaPaciente.getNombreSegundo(), 
                listaPaciente.getPrimerApellido() +" "+ listaPaciente.getSegundoApellido(), 
                listaPaciente.getTelefono()
            };
            modelo.addRow(datosFila);
        });
    }
    
    private void modificarPaciente(String pac){
        pacienteCRUD crud = new pacienteCRUD();
        createPaciente cp = new createPaciente(crud.selecionaPaciente(pac));
        cp.show();
        MainWindow.MainDesktop.add(cp);
        this.dispose();
    }
}
